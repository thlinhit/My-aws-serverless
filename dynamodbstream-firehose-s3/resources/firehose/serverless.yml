service: firehorse-resources
frameworkVersion: '3'

custom:
  stage: ${opt:stage, self:provider.stage}
  firehoseStreamName: test-firehose-log-put-s3

provider:
  name: aws
  stage: dev

resources:
  Resources:
    LogPutS3FireHoseRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: test-log-put-s3-custom-FirehoseRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - firehose.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: root
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - s3:PutObject
                  Resource:
                    - Fn::Sub: ${param:s3BucketArn}
                    - Fn::Sub: ${param:s3BucketArn}/*
                - Effect: Allow
                  Action:
                    - lambda:InvokeFunction
                    - lambda:GetFunctionConfiguration
                  Resource:
                    - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:transform-json-to-csv:$LATEST'

    myFireHose:
      Type: AWS::KinesisFirehose::DeliveryStream
      Properties:
        DeliveryStreamName: ${self:custom.firehoseStreamName}
        ExtendedS3DestinationConfiguration:
          BucketARN:
            Fn::Sub: ${param:s3BucketArn}
          BufferingHints:
            IntervalInSeconds: 60 # Remember to set Lambda TimeOut bigger than 1 minute
            SizeInMBs: 64 # The Lambda synchronous invocation mode has a payload size limit of 6 MB for both the request and the response. Make sure that your buffering size for sending the request to the function is less than or equal to 6 MB. Also ensure that the response that your function returns doesn't exceed 6 MB.
          ProcessingConfiguration:
            Enabled: true
            Processors:
              - Type: Lambda
                Parameters:
                  - ParameterName: LambdaArn
                    ParameterValue: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:transform-json-to-csv:$LATEST'
          DynamicPartitioningConfiguration:
            Enabled: true
            RetryOptions:
              DurationInSeconds: 300
          CompressionFormat: UNCOMPRESSED
          Prefix: "customer_transaction/!{partitionKeyFromLambda:bankname}/!{partitionKeyFromLambda:product}/!{partitionKeyFromLambda:partner}/!{partitionKeyFromLambda:date}/"
          ErrorOutputPrefix: error/
          RoleARN: !GetAtt LogPutS3FireHoseRole.Arn
  Outputs:
    fireHoseDeliveryStreamName:
      Value: ${self:custom.firehoseStreamName}