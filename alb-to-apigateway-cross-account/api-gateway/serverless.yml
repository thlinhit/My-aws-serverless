service: ${self:custom.servicePrefix}-apigateway
frameworkVersion: '3'

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  servicePrefix: thlinh

provider:
  stage: local
  runtime: python3.9
  memorySize: 128
  architecture: arm64
  region: us-east-1
  name: aws
  environment:
    RUNNING_STAGE: ${self:custom.stage}
    EXTENSION_DEBUG: "false"
    TZ: "Asia/Ho_Chi_Minh"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ssm:GetParameters
        - ssm:GetParameter
      Resource:
        - arn:aws:ssm:us-east-1:599617893694:parameter/tyme/service/paymongo/*
  endpointType: PRIVATE
  apiGateway:
    resourcePolicy:
      - Effect: Allow
        Principal: "*"
        Action: execute-api:Invoke
        Resource: "*"


#############
# RESOURCES #
#############
resources:
  Parameters:
    VpcId:
      Type: String
      Default: vpc-01bbf3ec33d6990ac
    SecurityGroup:
      Type: String
      Default: sg-0518ec06579ce9efe
    SubnetA:
      Type: String
      Default: subnet-019955884c281ed28
    SubnetB:
      Type: String
      Default: subnet-05873715ece21d710
  Mappings:
    SubnetConfig:
      VPC:
        CIDR: '10.0.0.0/16'
      PublicOne:
        CIDR: '10.0.0.0/24'
      PublicTwo:
        CIDR: '10.0.1.0/24'
      PublicThree:
        CIDR: '10.0.2.0/24'
      PrivateOne:
        CIDR: '10.0.100.0/24'
      PrivateTwo:
        CIDR: '10.0.101.0/24'
      PrivateThree:
        CIDR: '10.0.102.0/24'
  Resources:
    MyVpc:
      Type: AWS::EC2::VPC
      Properties:
        EnableDnsSupport: true
        EnableDnsHostnames: true
        CidrBlock: !FindInMap [ 'SubnetConfig', 'VPC', 'CIDR' ]
    PublicSubnetOne:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Select
          - 0
          - Fn::GetAZs: !Ref 'AWS::Region'
        VpcId: !Ref MyVpc
        CidrBlock: !FindInMap [ 'SubnetConfig', 'PublicOne', 'CIDR' ]
        MapPublicIpOnLaunch: true
    PublicSubnetTwo:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Select
          - 1
          - Fn::GetAZs: !Ref 'AWS::Region'
        VpcId: !Ref MyVpc
        CidrBlock: !FindInMap [ 'SubnetConfig', 'PublicTwo', 'CIDR' ]
        MapPublicIpOnLaunch: true
    PublicSubnetThree:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Select
          - 2
          - Fn::GetAZs: !Ref 'AWS::Region'
        VpcId: !Ref MyVpc
        CidrBlock: !FindInMap [ 'SubnetConfig', 'PublicThree', 'CIDR' ]
        MapPublicIpOnLaunch: true

    # Three private subnets where containers will only have private
    # IP addresses, and will only be reachable by other members of the
    # VPC and API Gateway
    PrivateSubnetOne:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Select
          - 0
          - Fn::GetAZs: !Ref 'AWS::Region'
        VpcId: !Ref MyVpc
        CidrBlock: !FindInMap [ 'SubnetConfig', 'PrivateOne', 'CIDR' ]
    PrivateSubnetTwo:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Select
          - 1
          - Fn::GetAZs: !Ref 'AWS::Region'
        VpcId: !Ref MyVpc
        CidrBlock: !FindInMap [ 'SubnetConfig', 'PrivateTwo', 'CIDR' ]
    PrivateSubnetThree:
      Type: AWS::EC2::Subnet
      Properties:
        AvailabilityZone: !Select
          - 2
          - Fn::GetAZs: !Ref 'AWS::Region'
        VpcId: !Ref MyVpc
        CidrBlock: !FindInMap [ 'SubnetConfig', 'PrivateThree', 'CIDR' ]
#---------------------------------------------------------------------
# Deploys ALB
#---------------------------------------------------------------------

    SecurityGroupIngressFromPrivateALB:
      Type: AWS::EC2::SecurityGroup
      Properties:
        Description:  Allow http on port 80
        VpcId: !Ref MyVpc
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0


#    PrivateLoadBalancer:
#      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
#      DeletionPolicy: Retain
#      UpdateReplacePolicy: Retain
#      Properties:
#        Name: private-alb
#        Scheme: internet-facing
#        Type: application
#        Subnets:
#          - !Ref SubnetA
#          - !Ref SubnetB
#        IpAddressType: ipv4
#        SecurityGroups:
#          - !Ref SecurityGroup