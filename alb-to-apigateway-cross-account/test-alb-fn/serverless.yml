service: ${self:custom.servicePrefix}-test-alb-fn
frameworkVersion: '3'

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  servicePrefix: thlinh
  pythonRequirements:
    slim: true
    layer: true
    noDeploy:
      - pytest
  serverless-iam-roles-per-function:
    defaultInherit: true

provider:
  name: aws
  stage: local
  runtime: python3.9
  memorySize: 128
  region: us-east-1
  lambdaHashingVersion: 20201221
  environment:
    RUNNING_STAGE: ${self:custom.stage}
    EXTENSION_DEBUG: "false"
    TZ: "Asia/Ho_Chi_Minh"

#############
# FUNCTIONS #
#############
functions:
  tableStreamCaptureFn:
    name: ${self:custom.servicePrefix}-test-alb-fn
    handler: src/main.handler
#    vpc:
#      securityGroupIds:
#        - ${param:privateLoadBalancerSecurityGroup}
#      subnetIds:
#        - ${param:privateSubnetOneId}
#        - ${param:privateSubnetTwoId}
#        - ${param:privateSubnetThreeId}
    events:
      - alb:
          listenerArn: ${param:albListenerArn}
          conditions:
            path: /hello
#          targetGroupName: customNameForTestAlb
          priority: 1
          method:
            - GET
            - PATCH
            - POST
          timeoutSeconds: 30
    layers:
      - !Ref PythonRequirementsLambdaLayer
    environment:
       POWERTOOLS_SERVICE_NAME:  ${self:custom.servicePrefix}-log-capture-fn
       LOG_LEVEL: DEBUG
       DEFAULT_REGION: ${self:custom.region}
    architecture: arm64



###########
# PLUGINS #
###########
plugins:
  - serverless-python-requirements
  - serverless-cloudformation-sub-variables
  - serverless-iam-roles-per-function


#############
# RESOURCES #
#############
#resources:



package:
  individually: true
  patterns:
    - '!node_modules'
    - '!.serverless/requirements'
    - "!${opt:package, '.serverless'}"
    - '!configs'
    - '!*.yml*'
    - '!*.yaml*'
    - '!*.json'
    - '!*.sh'
    - 'lib'
    - '*.py'
    - '!requirements.txt'
  excludeDevDependencies: true