service: ${self:custom.servicePrefix}-public-alb
frameworkVersion: '3'

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  servicePrefix: thlinh

provider:
  stage: local
  region: us-east-1
  name: aws


#############
# RESOURCES #
#############
resources:
  Parameters:
    Vpc:
      Type: String
      Default: ${param:vpcId}
    PublicSubnetOne:
      Type: String
      Default: ${param:publicSubnetOneId}
    PublicSubnetTwo:
      Type: String
      Default: ${param:publicSubnetTwoId}
    PublicSubnetThree:
      Type: String
      Default: ${param:publicSubnetThreeId}

  Resources:
    PublicLoadBalancer:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        Name: public-alb
        Scheme: internet-facing
#        LoadBalancerAttributes:
#          - Key: idle_timeout.timeout_seconds
#            Value: '30'
#        Type: application
        Subnets:
          - !Ref PublicSubnetOne
          - !Ref PublicSubnetTwo
          - !Ref PublicSubnetThree
        IpAddressType: ipv4
        SecurityGroups:
          - !Ref PublicLoadBalancerSecurityGroup

    DefaultTargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        Port: 80
        Protocol: HTTP
        VpcId: !Ref Vpc

    ALBHttpListener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
        DefaultActions:
          - Type: forward
            ForwardConfig:
              TargetGroups:
                - TargetGroupArn: !Ref DefaultTargetGroup
                  Weight: 1
        LoadBalancerArn: !Ref PublicLoadBalancer
        Port: 80
        Protocol: HTTP

    PublicLoadBalancerSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Public ALB - Allow http to client host
        VpcId: !Ref Vpc
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0

  Outputs:
    albArb:
      Value: !Ref PublicLoadBalancer
    albListenerArn:
      Value: !Ref ALBHttpListener
    loadBalancerSecurityGroup:
      Value: !Ref PublicLoadBalancerSecurityGroup
    loadBalancerDNSNAme:
      Value: !GetAtt PublicLoadBalancer.DNSName