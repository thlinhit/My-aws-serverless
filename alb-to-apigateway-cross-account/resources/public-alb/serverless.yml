service: ${self:custom.servicePrefix}-public-alb
frameworkVersion: '3'

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  servicePrefix: thlinh

provider:
  stage: local
  region: us-east-1
  name: aws


#############
# RESOURCES #
#############
resources:
  Parameters:
    Vpc:
      Type: String
      Default: ${param:vpcId}
    PublicSubnetOne:
      Type: String
      Default: ${param:publicSubnetOneId}
    PublicSubnetTwo:
      Type: String
      Default: ${param:publicSubnetTwoId}
    PublicSubnetThree:
      Type: String
      Default: ${param:publicSubnetThreeId}

  Resources:
# Private internal load balancer, hosted in private subnets that is accessible
# only from VPClink. Rules are added to this security group when VPC Link Security has been created
    PublicLoadBalancerSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Public ALB - Access to the public facing load balancer
        GroupName: Public ALB Security Group
        VpcId: !Ref Vpc

    PublicLoadBalancer:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        Name: public-alb
        Scheme: internet-facing
        LoadBalancerAttributes:
          - Key: idle_timeout.timeout_seconds
            Value: '30'
        Type: application
        Subnets:
          -  !Ref PublicSubnetOne
          -  !Ref PublicSubnetTwo
          -  !Ref PublicSubnetThree
        IpAddressType: ipv4
        SecurityGroups:
          - !Ref PublicLoadBalancerSecurityGroup

    ALBTargetGroupPrivate:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        TargetType: ip
        HealthCheckIntervalSeconds: 10
        HealthCheckProtocol: HTTP
        HealthCheckTimeoutSeconds: 5
        HealthyThresholdCount: 5
        UnhealthyThresholdCount: 3
        Matcher:
          HttpCode: '200-299'
        Port: 80
        Protocol: HTTP
        VpcId: !Ref Vpc
        TargetGroupAttributes:
          - Key: deregistration_delay.timeout_seconds
            Value: '5'
          - Key: slow_start.duration_seconds
            Value: '60'

    PublicLoadBalancerListener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
        DefaultActions:
          - TargetGroupArn: !Ref ALBTargetGroupPrivate
            Type: forward
        LoadBalancerArn: !Ref PublicLoadBalancer
        Port: 80
        Protocol: HTTP
  Outputs:
    albListenerArn:
      Value: !Ref PublicLoadBalancerListener
    loadBalancerSecurityGroup:
      Value: !Ref PublicLoadBalancerSecurityGroup