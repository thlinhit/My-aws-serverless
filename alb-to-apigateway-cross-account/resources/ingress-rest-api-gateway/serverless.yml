service: ${self:custom.servicePrefix}-ingress-rest-api-gateway
frameworkVersion: '3'

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  servicePrefix: thlinh

provider:
  stage: local
  region: us-east-1
  name: aws


#############
# RESOURCES #
#############
resources:
  Parameters:
    Vpc:
      Type: String
      Default: ${param:vpcId}
    PrivateSubnetOne:
      Type: String
      Default: ${param:privateSubnetOneId}
    PrivateSubnetTwo:
      Type: String
      Default: ${param:privateSubnetTwoId}
    PrivateSubnetThree:
      Type: String
      Default: ${param:privateSubnetThreeId}
    PrivateLoadBalancerListener:
      Type: String
      Default: ${param:albListenerArn}
    InfrastructureBaseSecurityGroupId:
      Type: String
      Default: ${param:infrastructureBaseSecurityGroupId}
  Resources:
    RestApiGateway:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: ${self:custom.servicePrefix}-ingress-rest-api-gateway
        Description: Ingress - Rest Api Gateway
        EndpointConfiguration:
          Types:
            - PRIVATE

    ProxyResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        ParentId: !GetAtt RestApiGateway.RootResourceId  # Attach to the root resource
        PathPart: '{proxy+}'  # Use the greedy path parameter for a proxy resource
        RestApiId: !Ref RestApiGateway

    ProxyMethod:
      Type: AWS::ApiGateway::Method
      Properties:
        ResourceId: !Ref ProxyResource
        RestApiId: !Ref RestApiGateway
        HttpMethod: ANY
        ApiKeyRequired: false
        AuthorizationType: NONE
        Integration:
          Type: HTTP_PROXY
          IntegrationHttpMethod: ANY
          Uri: http://internal-private-alb-790965056.us-east-1.elb.amazonaws.com
          ConnectionType: VPC_LINK
          ConnectionId: !Ref PrivateAPIGWvpcLink

    privateNlb:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        Name: ${self:custom.servicePrefix}-private-nlb
        Type: network
        Subnets:
          - !Ref PrivateSubnetOne
          - !Ref PrivateSubnetTwo
          - !Ref PrivateSubnetThree

    PrivateAPIGWvpcLink:
      Type: AWS::ApiGateway::VpcLink
      Properties:
        Name: private-rest-apigw-vpclink
        Description: VPC link for my RestAPI
        TargetArns:
          - !Ref privateNlb

#    APIRoute:
#      Type: AWS::ApiGatewayV2::Route
#      Properties:
#        ApiId: !Ref HttpApiGateway
#        RouteKey: 'ANY /'
#        Target: !Join
#          - /
#          - - integrations
#            - !Ref APIAlbIntegration
#
#    APIAlbIntegration:
#      Type: AWS::ApiGatewayV2::Integration
#      Properties:
#        ApiId: !Ref RestApiGateway
#        Description: Private ALB Integration
#        IntegrationType: HTTP_PROXY
#        IntegrationMethod: ANY
#        ConnectionType: VPC_LINK
#        ConnectionId: !Ref PrivateAPIGWvpcLink
#        IntegrationUri: !Ref PrivateLoadBalancerListener
#        PayloadFormatVersion: '1.0'
#
#    APIStage:
#      Type: AWS::ApiGatewayV2::Stage
#      Properties:
#        StageName: $default
#        AutoDeploy: true
#        ApiId: !Ref HttpApiGateway

  Outputs:
    APIURL:
      Description: Invoke URL
      Value: !Sub https://${RestApiGateway}.execute-api.${AWS::Region}.amazonaws.com/